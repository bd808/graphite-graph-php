; Example ini configuration file supporting variable expansion.
;
; Variables are declared by surrounding any string with double braces: {{VAR}}
;
; If no value is provided for a given variable at load time then the variable
; name itself will be output. This feature can be used to provide default
; values.
;
; Use like:
; $g = Graphite_GraphBuilder::build()
;     ->prefix('com.example.host')
;     ->ini('interface.ini', array('IF' => 'Tunnel0', 'IF_DESC' => 'tu0'));
; echo $g;

;; Graph settings
; any values outside of a section will be treated as settings for the graph as
; a whole
title = "Network Traffic {{IF_DESC}}"
vtitle = "Bits Per Sec"
bgcolor = "{{white}}"
fgcolor = "333333"
line_mode = "staircase"

[snmp]
; a "prefix" is a partial path to prepend to another metric
:is_prefix = 1
prefix = "collectd.snmp"

[interface-octets]
:is_prefix = 1
; prefixes can use other prefixes if that makes keeping track easier
:prefix = "snmp"
prefix = "if_octets-{{IF}}"

[rx]
; prefix and section label define the metric to graph
; "collectd.snmp.if_octets-IF.rx" in this case
:prefix = "interface-octets"
; "counter" is an alias for the "nonNegativeDerivative" function
counter = true
color = "green"
alias = "Inbound"

[tx]
:prefix = "interface-octets"
counter = true
scale = -1
color = "blue"
alias = "Outbound"

[95th_in-out]
:prefix = "interface-octets"
; "metric" is the data point under prefix to plot
; default is taken from the section label if not provided
metric = "*"
; "series" if provided must be a fully qualified graphite metric name
; it will not be expended with the default or explicit prefixes
; This can also be used for functions no yet supported by the API
; series = movingMedian(foo.bar.baz, 5)
counter = true
sum = true
npercentile = 95
color = "red"
dashed = 10
alias = "95th Percentile in+out"
